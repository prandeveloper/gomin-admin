{"version":3,"sources":["views/apps/sponsoredAds/SponsoredAd.js","axiosConfig.js"],"names":["SponsoredAd","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","data","banner_title","value","className","status","size","onClick","history","push","_id","selectedData","gridApi","getSelectedRows","runthisfunction","updateRowData","remove","onGridReady","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","this","console","log","sm","tag","length","right","placeholder","onChange","e","target","Ripple","color","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component","instance","axios","create","baseURL"],"mappings":"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","file":"static/js/173.077c99a1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n} from \"reactstrap\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport { ContextLayout } from \"../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { Eye, Edit, Trash2, ChevronDown } from \"react-feather\";\r\n//import classnames from \"classnames\";\r\nimport { history } from \"../../../history\";\r\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../assets/scss/pages/users.scss\";\r\n\r\nclass SponsoredAd extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 150,\r\n        filter: true,\r\n        // checkboxSelection: true,\r\n        // headerCheckboxSelectionFilteredOnly: true,\r\n        // headerCheckboxSelection: true,\r\n      },\r\n      {   \r\n        headerName: \"Store/Company name\",\r\n        field: \"banner_title\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data.banner_title}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n      headerName: \"Owner Name\",\r\n      field: \"banner_title\",\r\n      filter: true,\r\n      width: 200,\r\n      cellRendererFramework: (params) => {\r\n        return (\r\n          <div>\r\n            <span>{params.data.banner_title}</span>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      headerName: \"Phone No.\",\r\n      field: \"banner_title\",\r\n      filter: true,\r\n      width: 200,\r\n      cellRendererFramework: (params) => {\r\n        return (\r\n          <div>\r\n            <span>{params.data.banner_title}</span>\r\n          </div>\r\n        );\r\n      },\r\n    },  \r\n  \r\n    {\r\n      headerName: \"Email\",\r\n      field: \"banner_title\",\r\n      filter: true,\r\n      width: 200,\r\n      cellRendererFramework: (params) => {\r\n        return (\r\n          <div>\r\n            <span>{params.data.banner_title}</span>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      headerName: \"Subscription Date\",\r\n      field: \"banner_title\",\r\n      filter: true,\r\n      width: 200,\r\n      cellRendererFramework: (params) => {\r\n        return (\r\n          <div>\r\n            <span>{params.data.banner_title}</span>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      headerName: \"Renewal Date\",\r\n      field: \"banner_title\",\r\n      filter: true,\r\n      width: 200,\r\n      cellRendererFramework: (params) => {\r\n        return (\r\n          <div>\r\n            <span>{params.data.banner_title}</span>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n\r\n\r\n   \r\n    \r\n    {\r\n        headerName: \"Slot\",\r\n        field: \"status\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return params.value === \"Single\" ? (\r\n            <div className=\"badge badge-pill badge-success\">\r\n              {params.data.status}\r\n            </div>\r\n          ) : params.value === \"Dual\" ? (\r\n            <div className=\"badge badge-pill badge-warning\">\r\n              {params.data.status}\r\n            </div>\r\n          ) : null;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Duration\",\r\n        field: \"status\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return params.value === \"6 months\" ? (\r\n            <div className=\"badge badge-pill badge-success\">\r\n              {params.data.status}\r\n            </div>\r\n          ) : params.value === \"12 months\" ? (\r\n            <div className=\"badge badge-pill badge-warning\">\r\n              {params.data.status}\r\n            </div>\r\n          ) : null;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Actions\",\r\n        field: \"sortorder\",\r\n     \r\n        // field: \"transactions\",\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              <Eye\r\n                className=\"mr-50\"\r\n                size={20}\r\n                onClick={() =>\r\n                  history.push(`/app/sponsoredAds/viewSponsoredAds/${params.data._id}`)\r\n                }\r\n              />\r\n              {/* <Edit\r\n                className=\"mr-50\"\r\n                size={20}\r\n                onClick={() => history.push(\"/app/slider/editSlider\")}\r\n              /> */}\r\n              <Trash2\r\n                size={20}\r\n                onClick={() => {\r\n                  let selectedData = this.gridApi.getSelectedRows();\r\n                  this.runthisfunction(params.data._id);\r\n                  this.gridApi.updateRowData({ remove: selectedData });\r\n                }}\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  // async componentDidMount() {\r\n  //   await axiosConfig.get(\"/getbanner\").then((response) => {\r\n  //     const rowData = response.data.data;\r\n  //     console.log(rowData);\r\n  //     this.setState({ rowData });\r\n  //   });\r\n  // }\r\n  // async runthisfunction(id) {\r\n  //   console.log(id);\r\n  //   await axiosConfig.get(`/delbanner/${id}`).then(\r\n  //     (response) => {\r\n  //       console.log(response);\r\n  //     },\r\n  //     (error) => {\r\n  //       console.log(error);\r\n  //     }\r\n  //   );\r\n  // }\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      console.log(rowData),\r\n      (\r\n        <Row className=\"app-user-list\">\r\n          <Col sm=\"12\">\r\n            \r\n          </Col>\r\n          <Col sm=\"12\">\r\n            <Card>\r\n              <Row className=\"m-2\">\r\n                <Col>\r\n                  <h1 sm=\"6\" className=\"float-left\">\r\n                  Sponsored Ads Details \r\n                  </h1>\r\n                </Col>\r\n                {/* <Col>\r\n                  <Button\r\n                    className=\" btn btn-danger float-right\"\r\n                    onClick={() => history.push(\"/app/slider/addSlider\")}\r\n                  >\r\n                    Add Slider\r\n                  </Button>\r\n                </Col> */}\r\n              </Row>\r\n              <CardBody>\r\n                {this.state.rowData === null ? null : (\r\n                  <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                    <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                      <div className=\"mb-1\">\r\n                        <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                          <DropdownToggle tag=\"div\">\r\n                            {this.gridApi\r\n                              ? this.state.currenPageSize\r\n                              : \"\" * this.state.getPageSize -\r\n                                (this.state.getPageSize - 1)}{\" \"}\r\n                            -{\" \"}\r\n                            {this.state.rowData.length -\r\n                              this.state.currenPageSize *\r\n                                this.state.getPageSize >\r\n                            0\r\n                              ? this.state.currenPageSize *\r\n                                this.state.getPageSize\r\n                              : this.state.rowData.length}{\" \"}\r\n                            of {this.state.rowData.length}\r\n                            <ChevronDown className=\"ml-50\" size={15} />\r\n                          </DropdownToggle>\r\n                          <DropdownMenu right>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(20)}\r\n                            >\r\n                              20\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(50)}\r\n                            >\r\n                              50\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(100)}\r\n                            >\r\n                              100\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(134)}\r\n                            >\r\n                              134\r\n                            </DropdownItem>\r\n                          </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                      </div>\r\n                      <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                        <div className=\"table-input mr-1\">\r\n                          <Input\r\n                            placeholder=\"search...\"\r\n                            onChange={(e) =>\r\n                              this.updateSearchQuery(e.target.value)\r\n                            }\r\n                            value={this.state.value}\r\n                          />\r\n                        </div>\r\n                        <div className=\"export-btn\">\r\n                          <Button.Ripple\r\n                            color=\"primary\"\r\n                            onClick={() => this.gridApi.exportDataAsCsv()}\r\n                          >\r\n                            Export as CSV\r\n                          </Button.Ripple>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <ContextLayout.Consumer>\r\n                      {(context) => (\r\n                        <AgGridReact\r\n                          gridOptions={{}}\r\n                          rowSelection=\"multiple\"\r\n                          defaultColDef={defaultColDef}\r\n                          columnDefs={columnDefs}\r\n                          rowData={rowData}\r\n                          onGridReady={this.onGridReady}\r\n                          colResizeDefault={\"shift\"}\r\n                          animateRows={true}\r\n                          floatingFilter={false}\r\n                          pagination={true}\r\n                          paginationPageSize={this.state.paginationPageSize}\r\n                          pivotPanelShow=\"always\"\r\n                          enableRtl={context.state.direction === \"rtl\"}\r\n                        />\r\n                      )}\r\n                    </ContextLayout.Consumer>\r\n                  </div>\r\n                )}\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default SponsoredAd;","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"http://35.154.86.59/api/admin\",\r\n  \r\n});\r\n\r\nexport default instance;\r\n"],"sourceRoot":""}