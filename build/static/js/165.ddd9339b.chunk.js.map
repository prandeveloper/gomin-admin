{"version":3,"sources":["views/apps/products/unit/UnitList.js","axiosConfig.js"],"names":["UnitList","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","field","width","filter","checkboxSelection","headerCheckboxSelectionFilteredOnly","headerCheckboxSelection","cellRendererFramework","params","className","data","units_title","value","desc","status","size","onClick","history","push","_id","selectedData","gridApi","getSelectedRows","console","log","runthisfunction","updateRowData","remove","onGridReady","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","a","axiosConfig","get","then","response","id","this","sm","col-sm-6","tag","length","right","placeholder","onChange","e","target","Ripple","color","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component","instance","axios","create","baseURL"],"mappings":"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","file":"static/js/165.ddd9339b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport { ContextLayout } from \"../../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { Edit, Trash2, ChevronDown } from \"react-feather\";\r\n//import classnames from \"classnames\";\r\nimport { history } from \"../../../../history\";\r\n// import \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\n//import classNames from \"classnames\";\r\n\r\nclass UnitList extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"No.\",\r\n        // valueGetter:\"node.rowIndex + 1\",\r\n        field: \"sortorder\",\r\n        width: 150,\r\n        filter: true,\r\n        checkboxSelection: true,\r\n        headerCheckboxSelectionFilteredOnly: true,\r\n        headerCheckboxSelection: true,\r\n      },\r\n      {\r\n        headerName: \"Unit Title\",\r\n        field: \"units_title\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <div className=\"ml-2 mr-4\">\r\n                <span>{params.data.units_title}</span>\r\n              </div>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Value\",\r\n        field: \"value\",\r\n        filter: true,\r\n        width: 120,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.value}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Description\",\r\n        field: \"desc\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.desc}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Status\",\r\n        field: \"status\",\r\n        filter: true,\r\n        width: 150,\r\n\r\n        cellRendererFramework: (params) => {\r\n          return params.value === \"Active\" ? (\r\n            <div className=\"badge badge-pill badge-success ml-2\">\r\n              {params.data.status}\r\n            </div>\r\n          ) : params.value === \"Inactive\" ? (\r\n            <div className=\"badge badge-pill badge-danger\">\r\n              {params.data.status}\r\n            </div>\r\n          ) : null;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Actions\",\r\n        field: \"transactions\",\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              <Edit\r\n                className=\"mr-75 \"\r\n                size={20}\r\n                onClick={() =>\r\n                  history.push(`/app/products/unit/editUnit/${params.data._id}`)\r\n                }\r\n              />\r\n              <Trash2\r\n                size={20}\r\n                onClick={() => {\r\n                  let selectedData = this.gridApi.getSelectedRows();\r\n                  console.log(selectedData);\r\n                  this.runthisfunction(params.data._id);\r\n                  this.gridApi.updateRowData({ remove: selectedData });\r\n                }}\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await axiosConfig.get(\"/viewallunits\").then((response) => {\r\n      let rowData = response.data.data;\r\n      console.log(rowData);\r\n      this.setState({ rowData });\r\n    });\r\n  }\r\n\r\n  async runthisfunction(id) {\r\n    console.log(id);\r\n    await axiosConfig.get(`/delunits/${id}`).then((response) => {\r\n      console.log(response);\r\n    });\r\n  }\r\n\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      <Row className=\"app-user-list\">\r\n        <Col sm=\"12\">\r\n         \r\n        </Col>\r\n        <Col sm=\"12\">\r\n          <Card>\r\n            <Row className=\"m-2\">\r\n              <Col>\r\n                <h1 col-sm-6 className=\"float-left\">\r\n                  All Units\r\n                </h1>\r\n              </Col>\r\n              <Col>\r\n                <Button\r\n                  className=\" btn btn-danger float-right\"\r\n                  onClick={() => history.push(\"/app/products/unit/addUnit\")}\r\n                >\r\n                  Add New Unit\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n            <CardBody>\r\n              {this.state.rowData === null ? null : (\r\n                <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                  <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                    <div className=\"mb-1\">\r\n                      <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                        <DropdownToggle tag=\"div\">\r\n                          {this.gridApi\r\n                            ? this.state.currenPageSize\r\n                            : \"\" * this.state.getPageSize -\r\n                              (this.state.getPageSize - 1)}{\" \"}\r\n                          -{\" \"}\r\n                          {this.state.rowData.length -\r\n                            this.state.currenPageSize * this.state.getPageSize >\r\n                          0\r\n                            ? this.state.currenPageSize * this.state.getPageSize\r\n                            : this.state.rowData.length}{\" \"}\r\n                          of {this.state.rowData.length}\r\n                          <ChevronDown className=\"ml-50\" size={15} />\r\n                        </DropdownToggle>\r\n                        <DropdownMenu right>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(20)}\r\n                          >\r\n                            20\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(50)}\r\n                          >\r\n                            50\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(100)}\r\n                          >\r\n                            100\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(134)}\r\n                          >\r\n                            134\r\n                          </DropdownItem>\r\n                        </DropdownMenu>\r\n                      </UncontrolledDropdown>\r\n                    </div>\r\n                    <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                      <div className=\"table-input mr-1\">\r\n                        <Input\r\n                          placeholder=\"search...\"\r\n                          onChange={(e) =>\r\n                            this.updateSearchQuery(e.target.value)\r\n                          }\r\n                          value={this.state.value}\r\n                        />\r\n                      </div>\r\n                      <div className=\"export-btn\">\r\n                        <Button.Ripple\r\n                          color=\"primary\"\r\n                          onClick={() => this.gridApi.exportDataAsCsv()}\r\n                        >\r\n                          Export as CSV\r\n                        </Button.Ripple>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <ContextLayout.Consumer>\r\n                    {(context) => (\r\n                      <AgGridReact\r\n                        gridOptions={{}}\r\n                        rowSelection=\"multiple\"\r\n                        defaultColDef={defaultColDef}\r\n                        columnDefs={columnDefs}\r\n                        rowData={rowData}\r\n                        onGridReady={this.onGridReady}\r\n                        colResizeDefault={\"shift\"}\r\n                        animateRows={true}\r\n                        floatingFilter={false}\r\n                        pagination={true}\r\n                        paginationPageSize={this.state.paginationPageSize}\r\n                        pivotPanelShow=\"always\"\r\n                        enableRtl={context.state.direction === \"rtl\"}\r\n                      />\r\n                    )}\r\n                  </ContextLayout.Consumer>\r\n                </div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UnitList;\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"http://35.154.86.59/api/admin\",\r\n  \r\n});\r\n\r\nexport default instance;\r\n"],"sourceRoot":""}